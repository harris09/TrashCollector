package main;
import java.io.IOException;

import com.google.maps.DirectionsApi.RouteRestriction;
import com.google.maps.DistanceMatrixApi;
import com.google.maps.DistanceMatrixApiRequest;
import com.google.maps.GeoApiContext;
import com.google.maps.GeocodingApi;
import com.google.maps.errors.ApiException;
import com.google.maps.model.DistanceMatrix;
import com.google.maps.model.GeocodingResult;
import com.google.maps.model.LatLng;
import com.google.maps.model.TravelMode;



/*
 * This Java source file was generated by the Gradle 'init' task.
 */
public class DistanceFinder {


	
    public static String getFormattedAddress(String[] latlongArr, GeoApiContext distCalcer) {
		Double latSrc = Double.parseDouble(latlongArr[0]);
		Double lonSrc = Double.parseDouble(latlongArr[1]);		      
				
/*		GeoApiContext distCalcer = new GeoApiContext.Builder().apiKey(apiKey).build();
		DistanceMatrixApiRequest req = DistanceMatrixApi.newRequest(distCalcer);*/
		
		LatLng addrLatLng  = new LatLng(latSrc, lonSrc);

		GeocodingResult[] formattedAddress = null;
		try {
			formattedAddress = GeocodingApi.reverseGeocode(distCalcer, addrLatLng).await();
		} catch (ApiException e1) {
			// TODO Auto-generated catch block
			System.out.println("ApiException" + e1);
			e1.printStackTrace();
		} catch (InterruptedException e1) {
			// TODO Auto-generated catch block
			System.out.println("InterruptedException" + e1);
			e1.printStackTrace();
		} catch (IOException e1) {
			// TODO Auto-generated catch block
			System.out.println("IOException" + e1);
			e1.printStackTrace();
		};

		return formattedAddress[0].formattedAddress;
    }
    
    public static String getDistance(String src, String dist, GeoApiContext distCalcer) {
				
/*    	GeoApiContext distCalcer = new GeoApiContext.Builder().apiKey(API_KEY).build();*/
		
		DistanceMatrixApiRequest req = DistanceMatrixApi.newRequest(distCalcer);
	   
		DistanceMatrix result = null;
		try {
			result = req.origins(src)
			       .destinations(dist)
			       .mode(TravelMode.DRIVING)
			       .avoid(RouteRestriction.TOLLS)
			       .language("en-US")
			       .await();
		} catch (ApiException e1) {
			// TODO Auto-generated catch block
			System.out.println("ApiException" + e1);
			e1.printStackTrace();
		} catch (InterruptedException e1) {
			// TODO Auto-generated catch block
			System.out.println("InterruptedException" + e1);
			e1.printStackTrace();
		} catch (IOException e1) {
			// TODO Auto-generated catch block
			System.out.println("IOException" + e1);
			e1.printStackTrace();
		};

		return result.rows[0].elements[0].distance.humanReadable;	    	
    }
    
    public boolean someLibraryMethod() {
        return true;
    }    
}
